struct void

struct Window:
    anon _: usize[10]

struct Event:
    kind: usize
    parameters: usize[7]

extern fn yield_task()

extern fn new_window(
     anon window: Window^mut
     title: u8[^]
     width: usize
     height: usize
     x: usize
     y: usize
     menu_bar: void^
     widgets: void^
)
extern fn destroy_window(anon window: Window^mut)
extern fn get_next_window_event(anon window: Window^mut) Event
extern fn get_window_overlay_number(anon window: Window^mut) u8
extern fn start_dragging_window(anon window: Window^mut)

extern fn draw_str_to_overlay(string: u8[^], x: usize, y: usize, foreground_color: u32, background_color: u32, overlay: u8)

extern fn breakpoint()

fn main():
    let mut window = (null() as Window^)^
    let window = window@mut
    window.new_window(
        title: "Window Demo"
        width: 256
        height: 256
        x: 64
        y: 64
        menu_bar: null()
        widgets: null()
    )

    let color_black = 16777216_u32
    let color_gray = 2155905152_u32
    let color_white = (0 - 1) as u32
    draw_str_to_overlay(
        string: "Hello, world!"
        x: 16
        y: 32
        foreground_color: color_black
        background_color: color_white
        overlay: window.get_window_overlay_number()
    )

    let mut running = true
    while running:
        yield_task()
        let mut event = Event(kind: 0, parameters: (null() as usize[7]^)^)
        while event.kind != 0 - 1:
            event = window.get_next_window_event()
            if event.kind == 0:
                let x = event.parameters@[0]
                let y = event.parameters@[1]
                if y < 16:
                    if x < 8:
                        running = false
                    else:
                        window.start_dragging_window()
    window.destroy_window()

fn null() void^:
    (0@ as void^^)^
